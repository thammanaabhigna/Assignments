=======================LINQ1==========================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LINQ
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] arr = { 12, 45, 67, 93, 8, 61, 74, 52, 82, 97, 27, 49, 58, 79, 86, 14, 3, 23, 37, 92 };
            int count = 0;

            for (int i = 0; i < arr.Length; i++)
            {
                if (arr[i] > 40)
                {
                    count += 1;
                }
            }
            int[] brr = new int[count];
            int index = 0;
            for (int i = 0; i < arr.Length; i++)
            {
                if (arr[i] > 40)
                {
                    brr[index] = arr[i];
                    index += 1;
                }
            }
            Array.Sort(brr); //Ascending Order
            Array.Reverse(brr); //Descending Order
            foreach (int x in brr)
            {
                Console.WriteLine("Elements of the array are : " + x);
                Console.ReadKey();
            }
        }
    }
}

=====================================================LINQ2=========
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LINQ2
{
    public class program
    {
        public static void Main(string[] args)
        {
            //implement the LINQ ON collections-LIST example
            IList<Student> studentList = new List<Student>() { 

                //4STUDENTS,4ID,4NAME,4AGE,4BATCH
                new Student() { StudentID = 2, StudentName = "Abhigna", Age = 21, BatchID = 1 },
                new Student() { StudentID = 3, StudentName = "Ramyasree", Age = 22, BatchID = 2 },
                new Student() { StudentID = 4, StudentName = "Sowmya", Age = 40, BatchID = 3 },
                new Student() { StudentID = 5, StudentName = "Lasya", Age = 23, BatchID = 4 },
            };
            //applying LINQ logic as same as SQL
            var StudentName = studentList.Where(s => s.Age > 18).Select(s => s).Where(st => st.BatchID > 0).Select(s => s.StudentName);
            var StudentName1 = studentList.Where(s => s.Age > 25).Select(s => s).Where(st => st.BatchID > 4).Select(s => s.StudentName);
            foreach(var name in StudentName)
            {
                Console.WriteLine(name);
            }
            foreach(var name1 in StudentName1)
            {
                Console.WriteLine(name1);
            }
            Console.ReadLine();
        }
    }
    public class Student
    {
        public int StudentID { get; set; }
        public String StudentName { get; set; }
        public int Age { get; set; }
        public int BatchID { get; set; }
    }
 
       
}
======================================LINQ3============================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LINQ3
    {
        public class program
        {
            public static void Main(string[] args)
            {
                //implement the LINQ ON collections-LIST example
                IList<Student> studentList = new List<Student>() { 

                //4STUDENTS,4ID,4NAME,4AGE,4BATCH
                new Student() { StudentID = 2, StudentName = "Abhigna", Age = 21, BatchID = 1 },
                new Student() { StudentID = 3, StudentName = "Ramyasree", Age = 22, BatchID = 2 },
                new Student() { StudentID = 4, StudentName = "Sowmya", Age = 40, BatchID = 3 },
                new Student() { StudentID = 5, StudentName = "Lasya", Age = 23, BatchID = 4 },
            };
                //applying LINQ logic as same as SQL
                var StudentName = studentList.Where(s => s.Age > 18).Select(s => s).Where(st => st.BatchID >1).Select(s => s.StudentName);
                var StudentName1 = studentList.Where(s => s.Age > 25).Select(s => s).Where(st => st.BatchID > 4).Select(s => s.StudentName);
            //SECOND CONDITION 
            var smartstudent = from s in studentList
                               where s.Age > 18 && s.Age < 22
                               select new { StudentName = s.StudentName };
            smartstudent.ToList().ForEach(s => Console.WriteLine(s.StudentName));
            //group by execution
            var studentsGroupByBatch = from s in studentList
                                       group s by s.BatchID into sb
                                       orderby sb.Key
                                       select new { sb.Key, sb };
            //groupby query
            var studentsgroupbybatch1 = from s in studentList
                                        where s.BatchID > 0
                                        group s by s.BatchID into sb
                                        orderby sb.Key
                                        select new { sb.Key, sb };
            foreach(var group in studentsgroupbybatch1)
            {
                Console.WriteLine("BatchID {0}: ", group.Key);
            }
            foreach(var group in studentsGroupByBatch)
            {
                Console.WriteLine("BatchID {0}:", group.Key);
            }
                foreach (var name in StudentName)
                {
                    Console.WriteLine(name);
                }
                foreach (var name1 in StudentName1)
                {
                    Console.WriteLine(name1);
                }
                Console.ReadLine();
            }
        }
        public class Student
        {
            public int StudentID { get; set; }
            public String StudentName { get; set; }
            public int Age { get; set; }
            public int BatchID { get; set; }
        }


    }




====================================LINQEMP========================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LINQemployee
    {
        public class Employee
        {
            public int EmpID { get; set; }
            public string EmpName { get; set; }
            public int EmpSalary { get; set; }
            public string EmpDesignation { get; set; }
        }
        public class Program
        {
            static void Main(string[] args)
            {
            //Implement the linq on collections-LIST example
            List<Employee> emplist = new List<Employee>
            {
                new Employee(){EmpID=101,EmpName="ABHIGNA",EmpSalary=18000,EmpDesignation= "PL"},
                new Employee(){EmpID=102,EmpName="RAMYASREE",EmpSalary=25000,EmpDesignation= "DEVELOPER"},
                new Employee(){EmpID=103,EmpName="SOWMYA",EmpSalary=35000,EmpDesignation= "MANAGER"},
                new Employee(){EmpID=104,EmpName="PRIYA",EmpSalary=20000,EmpDesignation= "ENGINEER"},

            };
                //Applying linq logic similar to sql
                var empName = emplist.Where(s => s.EmpSalary > 17000).Select(s => s).Where(st => st.EmpID > 100).Select(s => s.EmpName);
                var empName1 = emplist.Where(s => s.EmpSalary <= 22000).Select(s => s).Where(st => st.EmpID == 101).Select(s => s.EmpName);
                var empName2 = emplist.Where(s => s.EmpSalary >= 20000).Select(s => s).Where(st => st.EmpID < 102).Select(s => s.EmpName);
                var empName3 = emplist.Where(s => s.EmpSalary <= 25000).Select(s => s).Where(st => st.EmpID == 103).Select(s => s.EmpName);
                var empName4 = emplist.Where(s => s.EmpSalary > 18000).Select(s => s).Where(st => st.EmpID < 104).Select(s => s.EmpName);
                var empName5 = emplist.Where(s => s.EmpSalary <= 25000).Select(s => s).Where(st => st.EmpID == 101).Select(s => s.EmpName);
                var empName6 = emplist.Where(s => s.EmpSalary < 18000).Select(s => s).Where(st => st.EmpID > 102).Select(s => s.EmpName);
                var empName7 = emplist.Where(s => s.EmpSalary > 19000).Select(s => s).Where(st => st.EmpID > 102).Select(s => s.EmpName);
                var empName8 = emplist.Where(s => s.EmpSalary == 25000).Select(s => s).Where(st => st.EmpID == 103).Select(s => s.EmpName);
                var empName9 = emplist.Where(s => s.EmpSalary < 25000).Select(s => s).Where(st => st.EmpID > 101).Select(s => s.EmpName);
                var Youngemployee = from s in emplist where (s.EmpSalary > 12000 && s.EmpSalary < 24000) select new { empName = s.EmpName };
                Youngemployee.ToList().ForEach(s => Console.WriteLine(s.empName)); //stored information converted to list
                foreach (var x in empName)
                {
                    Console.WriteLine(x);
                }
                foreach (var y in empName1)
                {
                    Console.WriteLine(y);
                }
                foreach (var a in empName2)
                {
                    Console.WriteLine(a);
                }
                foreach (var b in empName3)
                {
                    Console.WriteLine(b);
                }
                foreach (var c in empName4)
                {
                    Console.WriteLine(c);
                }
                foreach (var d in empName5)
                {
                    Console.WriteLine(d);
                }
                foreach (var e in empName6)
                {
                    Console.WriteLine(e);
                }
                foreach (var f in empName7)
                {
                    Console.WriteLine(f);
                }
                foreach (var g in empName8)
                {
                    Console.WriteLine(g);
                }
                foreach (var i in empName9)
                {
                    Console.WriteLine(i);
                }
                Console.ReadKey();
            }
        }
    }
